name: SLURM

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: cytomineuliege/slurm:v1.1.0

    steps:
    - name: Disable telemetry
      run: echo "NO_ET=TRUE" >> $GITHUB_ENV
    - uses: actions/checkout@v2
    - name: Pull docker image
      run: |
        docker pull $DOCKER_IMAGE
        # Have image running in the background
        docker run -itd --privileged --name slurm $DOCKER_IMAGE
    - name: Setup SLURM
      run: |
        docker exec slurm bash -c "yum install -y epel-release"
        docker exec slurm bash -c "yum install -y slurm"
        docker exec slurm bash -c "systemctl enable slurmd && systemctl enable slurmctld && systemctl start slurmd && systemctl start slurmctld"
        docker exec slurm bash -c "echo -e '[slurmdbd]\nStorageType=accounting_storage/slurmdbd' > /etc/slurm/slurmdbd.conf"
        docker exec slurm bash -c "sacctmgr -i add account none,test Cluster=linux Description='none' Organization='none'"
    - name: Install Python 3 and pip
      run: |
        docker exec slurm bash -c "yum install -y python3 python3-pip"
    - name: Setup Python and run tests
      run: |
        docker exec slurm bash -c "echo $NO_ET"
        docker exec slurm bash -c "ls -la && echo list top level dir"
        docker exec slurm bash -c "ls -la /pydra && echo list pydra dir"
        docker exec slurm bash -c "pip3 install --upgrade pip && pip3 install -e /pydra[test] && python3 -c 'import pydra; print(pydra.__version__)'"
        docker exec slurm bash -c "pytest --color=yes -vs -n auto --cov pydra --cov-config /pydra/.coveragerc --cov-report xml:/pydra/cov.xml --doctest-modules /pydra/pydra"
    - name: Upload to codecov
      run: |
        docker exec slurm bash -c "codecov --root /pydra -f /pydra/cov.xml -F unittests"
        docker rm -f slurm
